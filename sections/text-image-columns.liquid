{% assign background_color = "bg-" | append: section.settings.background_color %}
{% assign img_placement = section.settings.img_placement %}

<div class="text-img-columns {{background_color}}">
  {% if section.settings.heading != blank or section.settings.subheading != blank %}
    {% render 'headings' %}
  {% endif %}

  <div class="content-container {{img_placement}}">
    {% if img_placement == 'right' %}
      <div class="paragraph">
        {{ section.settings.text }}

        {% if section.settings.img_below_check != false%}
          <div class="img-below-container">
            <img src="{{ section.settings.img_below | img_url: '1920x' }}" alt=""/>
          </div>
        {% endif %}

        {% if section.settings.buttonOne != blank or section.settings.buttonTwo != blank%}
          <div class="buttons">
            <a href="{{ section.settings.buttonOne_link }}" target="_blank">
              <div class="button-container">
                <img src="{{ section.settings.buttonOne | image_url}}" alt="Apple Store">
              </div>
            </a>

            <a href="{{ section.settings.buttonTwo_link }}" target="_blank">
              <div class="button-container">
                <img class="google-btn" src="{{ section.settings.buttonTwo | image_url}}" alt="Google Play">
              </div>
            </a>
          </div>
        {% endif %}
      </div>

      {% if section.settings.image == blank and section.settings.counter == true%}
        <div class="counter-container">
          <h1>
            <span class="counter" data-count="100">0</span>%</h1>
          <div class="progress">
            <div class="progress-value"></div>
          </div>
          <span class="counter-text">Private. Local. DIY.</span>
        </div>
      {% else %}
        <div class="img-container">
          <img src="{{ section.settings.image | img_url: '1920x' }}" alt=""/>
        </div>
      {% endif %}

    {% elsif img_placement == 'left' %}
      {% if section.settings.image == blank and section.settings.counter == true%}
        <div class="counter-container">
          <h1>
            <span class="counter" data-count="100">0</span>%</h1>
          <div class="progress">
            <div class="progress-value"></div>
          </div>
          <span class="counter-text">Private. Local. DIY.</span>
        </div>
      {% else %}
        <div class="img-container">
          <img src="{{ section.settings.image | img_url: '1920x' }}" alt=""/>
        </div>
      {% endif %}

      <div class="paragraph">
        {{ section.settings.text }}
        {% if section.settings.img_below_check != false%}
          <div class="img-below-container">
            <img src="{{ section.settings.img_below | img_url: '1920x' }}" alt=""/>
          </div>
        {% endif %}

        {% if section.settings.buttonOne != blank or section.settings.buttonTwo != blank%}
          <div class="buttons">
            <a href="{{ section.settings.buttonOne_link }}" target="_blank">
              <div class="button-container">
                <img src="{{ section.settings.buttonOne | image_url}}" alt="Apple Store">
              </div>
            </a>

            <a href="{{ section.settings.buttonTwo_link }}" target="_blank">
              <div class="button-container">
                <img class="google-btn" src="{{ section.settings.buttonTwo | image_url}}" alt="Google Play">
              </div>
            </a>
          </div>
        {% endif %}
      </div>

    {% endif %}
  </div>
</div>

{% schema %}
  {
    "name": "Text Image Columns",
    "settings": [
      {
        "type": "select",
        "id": "background_color",
        "label": "Background Color",
        "default": "white",
        "options": [
          {
            "value": "white",
            "label": "White"
          }, {
            "value": "lighter-blue",
            "label": "Blue"
          }
        ]
      },
      {
        "type": "select",
        "id": "img_placement",
        "label": "Image Placement",
        "default": "right",
        "options": [
          {
            "value": "right",
            "label": "Right"
          }, {
            "value": "left",
            "label": "Left"
          }
        ]
      },
      {
        "id": "image",
        "type": "image_picker",
        "label": "Image"
      },
      {
        "type": "checkbox",
        "id": "counter",
        "label": "Add Counter",
        "default": false
      }, {
        "id": "heading",
        "type": "text",
        "label": "Heading",
        "default": "Title"
      }, {
        "id": "subheading",
        "type": "text",
        "label": "Subheading",
        "default": "Sub Title"
      }, {
        "id": "text",
        "type": "richtext",
        "label": "Text"
      }, {
        "type": "checkbox",
        "id": "img_below_check",
        "label": "Add Image Below Text",
        "default": false
      }, {
        "id": "img_below",
        "type": "image_picker",
        "label": "Image Below Text"
      }, {
        "id": "buttonOne",
        "type": "image_picker",
        "label": "Button Image"
      }, {
        "id": "buttonTwo",
        "type": "image_picker",
        "label": "Button Image Two"
      }, {
        "id": "buttonOne_link",
        "type": "url",
        "label": "Button Link One"
      }, {
        "id": "buttonTwo_link",
        "type": "url",
        "label": "Button Two Link"
      }
    ],
    "presets": [
      {
        "name": "Text Image Columns",
        "category": "Image"
      }
    ]
  }
{% endschema %}

{% stylesheet %}
  .text-img-columns .content-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    align-items: center;
    margin: 0 auto;
    max-width: 75vw;
    gap: 50px;
    padding: 0 0 88px;
  }
  .text-img-columns .content-container p {
    color: var(--k-dark-gray);
    font-size: 24px;
  }
  .text-img-columns .img-container {
    justify-self: center;
    overflow: hidden;
    border-radius: 10px;
  }
  .text-img-columns img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  .text-img-columns .paragraph {
    width: 100%;
    align-self: center;
    justify-self: center;
  }
  .img-below-container {
    width: 50%;
    margin: 20px auto 0;
  }
  .text-img-columns .counter-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
    align-self: center;
    justify-self: center;
  }
  .text-img-columns .counter {
    animation-duration: 1s;
    animation-delay: 0s;
  }
  .text-img-columns h1 {
    color: rgb(var(--color-base-accent-1));
    font-size: 140px;
    margin: 0;
  }
  .text-img-columns span.counter-text {
    font-size: 38px;
    font-weight: 700;
    margin: 10px 0 0;
  }
  .text-img-columns .progress {
    background: white;
    align-items: center;
    position: relative;
    padding: 0 5px;
    display: flex;
    height: 35px;
    width: 300px;
    border: 2px solid black;
  }
  .text-img-columns .progress-value {
    box-shadow: 0 10px 40px -10px #fff;
    background: rgb(var(--color-base-accent-1));
    height: 20px;
    width: 0;
  }
  .progress-animation {
    animation: load 3s normal forwards;
  }

  .text-img-columns .buttons {
    display: flex;
    align-items: center;
  }
  .text-img-columns .buttons .button-container {
    display: flex;
    align-items: center;
    overflow: hidden;
    margin: 10px;
  }

  @keyframes load {
    0% {
      width: 0;
    }
    100% {
      width: 100%;
    }
  }
  /* MEDIA QUERIES */
  @media(max-width: 1280px) {
    .text-img-columns .content-container {
      grid-template-rows: 1fr 1fr;
      grid-template-columns: none;
      gap: 5px;
      padding: 0 0 50px;
    }
    .text-img-columns .counter-container {
      grid-row: 1 / 3;
      grid-column: 1 / 2;
    }
    .text-img-columns .img-container {
      grid-row: 1 / 3;
      grid-column: 1 / 2;
      width: 45vw;
    }
    .text-img-columns .paragraph {
      grid-row: 3 / 4;
      grid-column: 1 / 2;
      text-align: center;
      margin-top: 25px;
    }
  }


  @media(max-width: 800px) {
    .text-img-columns .content-container {
      grid-template-rows: 1fr 1fr;
      margin: 0 auto;
    }
    .text-img-columns .img-container {
      width: 75vw;
    }
    .text-img-columns h1 {
      font-size: 100px;
    }
    .text-img-columns span.counter-text {
      font-size: 24px;
    }
    .text-img-columns .progress {
      height: 30px;
      width: 225px;
    }
    .text-img-columns .progress-value {
      height: 17px;
    }
  }
  @media(max-width: 600px) {
    .text-img-columns {
      padding-bottom: 20px;
    }
    .text-img-columns .content-container p {
      font-size: 18px;
    }
    .img-below-container {
      margin: 30px auto 0;
    }
  }
{% endstylesheet %}

<script>
  const observer = new IntersectionObserver(el => {
    el.forEach(e => {
      if (e.isIntersecting) {
        $('.counter').each(function() {
          var $this = $(this),
            countTo = $this.attr('data-count');

          $({countNum: $this.text()}).animate({
            countNum: countTo
          }, {
            duration: 3000,
            easing: 'linear',
            step: function() {
              $this.text(Math.floor(this.countNum));
            },
            complete: function() {
              $this.text(this.countNum);
            }
          });
        });
        $('.progress-value').addClass('progress-animation');
      }
    });
  });
  observer.observe($('.counter-container').get(0));
</script>