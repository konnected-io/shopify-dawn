{{ 'k-table-countries.css' | asset_url | stylesheet_tag }}

{%- style -%}
    .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
        padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }

    @media screen and (min-width: 750px) {
        .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
        }
    }
{%- endstyle -%}

{% liquid
    assign meta_name = section.settings.meta_name
    assign exclude = section.settings.exclude
%}

<div class="color-{{ section.settings.color_scheme }} isolate gradient">
    <div class="section-{{ section.id }}-padding">
        <div class="collection__title title-wrapper title-wrapper--no-top-margin page-width page-width--narrow {% if show_mobile_slider %} title-wrapper--self-padded-tablet-down{% endif %}{% if show_desktop_slider %} collection__title--desktop-slider{% endif %}">
            {%- if section.settings.title != blank -%}
            <h1 class="title inline-richtext center {{ section.settings.heading_size }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">{{ section.settings.title }}</h2>
            {%- endif -%}
            {%- if section.settings.description != blank -%}
            <div class="collection__description center rte  {{ section.settings.text_style }}  {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
                {{ section.settings.description }}
            </div>
            {%- endif -%}
        </div>
        <div class="page-width page-width--narrow">
            <div class="meta-table large-up-hide">
                {% for block in section.blocks %}

                    <div class="table-column">
                        <details
                            id="Details-{{ block.id }}-{{ forloop.index }}"
                          >
                            <summary id="Summary-{{ block.id }}-{{ forloop.index }}">
                                <div class="table-cell heading-column">
                                    <div class="table-title">
                                        {% if block.settings.image != blank %}
                                            <div>
                                                <div
                                                    class="media global-media-settings media--transparent media--adapt"
                                                    style="padding-bottom: 100%;"
                                                >
                                                    {%- liquid
                                                    assign number_of_columns = 1
                                                    assign number_of_columns_mobile = 1
                                                    assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                    assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                    assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                                                    assign image_width = 1
                                                    -%}
                                                    {% capture sizes %}
                                                    (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                                                    (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                                                    (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                                                    calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                                                    {% endcapture %}
                                                    {{
                                                    block.settings.image
                                                    | image_url: width: 80
                                                    | image_tag:
                                                        loading: 'lazy',
                                                        widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                                                        sizes: sizes
                                                    }}
                                                </div>
                                            </div>
                                        {% endif %}
                                        <div>
                                            <h3 class="h2">{{ block.settings.title }}</h4>
                                        </div>
                                    </div>
                                </div>
                                <span class="large-up-hide">
                                    {% render 'icon-caret' %}
                                </span>
                            </summary>
                            <div
                              class="accordion__content"
                              id="CollapsibleAccordion-{{ block.id }}-{{ forloop.index }}"
                              role="region"
                              aria-labelledby="Summary-{{ block.id }}-{{ forloop.index }}"
                            >
                                <div class="content-drop">
                                    {% assign dropdown_loop = blank %}

                                    {% if block.settings.states_only == 'true' %}
                                        {% assign dropdown_loop = shop.metaobjects[meta_name].values | where: 'is_us_state', true %}
                                    {% else %}
                                        {% assign dropdown_loop = shop.metaobjects[meta_name].values | where: 'is_us_state', false %}
                                    {% endif %}

                                    {%- for object in dropdown_loop -%}
                                        {% assign country_name = object.country_name %}
                                        {% assign country_link = object.page.value.url %}
                                        {% assign country_flag = object.country_flag %}

                                        {% unless exclude contains country_name %}
                                            <div class="table-cell {% if block.settings.states_only == 'true' %} state-cell{% endif %}">
                                                <div class="table-title {% if object.country_flag != blank and block.settings.states_only != 'true'  %} w-icon{% endif %}">
                                                    {% if object.country_flag != blank and block.settings.states_only != 'true' %}
                                                        <div>
                                                            <div
                                                                class="media global-media-settings media--transparent media--adapt"
                                                                style="padding-bottom: 100%;"
                                                            >
                                                                {%- liquid
                                                                assign number_of_columns = 1
                                                                assign number_of_columns_mobile = 1
                                                                assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                                assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                                assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                                                                assign image_width = 1
                                                                -%}
                                                                {% capture sizes %}
                                                                (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                                                                (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                                                                (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                                                                calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                                                                {% endcapture %}
                                                                {{
                                                                    object.country_flag
                                                                | image_url: width: 80
                                                                | image_tag:
                                                                    loading: 'lazy',
                                                                    widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                                                                    sizes: sizes
                                                                }}
                                                            </div>
                                                        </div>
                                                    {% endif %} 
                                                    <div>
                                                        <a href="{{ object.page.value.url }}" class="link full-unstyled-link accent-link {% if block.settings.states_only == 'true' %} center{% endif %}">{{ country_name }}</a>
                                                    </div>
                                                </div>
                                            </div>
                                        {% endunless %}
                                    {% endfor %}
                                </div>
                            </div>
                        </details>
                    </div>
                {% endfor%}

            </div>
            <div class="small-hide medium-hide desktop-table">
                <div class="center">
                    <table>
                        <thead>
                            <tr>
                                {% for block in section.blocks %}
                                    <th>
                                        <div class="table-title">
                                            {% if block.settings.image != blank %}
                                                <div>
                                                    <div
                                                        class="media global-media-settings media--transparent media--adapt"
                                                        style="padding-bottom: {{ 1 | divided_by: block.settings.image.aspect_ratio | times: 100 }}%;"
                                                    >
                                                        {%- liquid
                                                        assign number_of_columns = 1
                                                        assign number_of_columns_mobile = 1
                                                        assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                        assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                        assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                                                        assign image_width = 1
                                                        -%}
                                                        {% capture sizes %}
                                                        (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                                                        (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                                                        (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                                                        calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                                                        {% endcapture %}
                                                        {{
                                                        block.settings.image
                                                        | image_url: width: 80
                                                        | image_tag:
                                                            loading: 'lazy',
                                                            widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                                                            sizes: sizes
                                                        }}
                                                    </div>
                                                </div>
                                            {% endif %}
                                            <div>
                                                <h3 class="h2">{{ block.settings.title }}</h4>
                                            </div>
                                        </div>
                                    </th>
                                {% endfor %}
                            </tr>
                        </thead>
                        <tbody>
                            {% assign states = shop.metaobjects[meta_name].values | where: 'is_us_state', true %}
                            {% assign countries = shop.metaobjects[meta_name].values | where: 'is_us_state', false %}

                            {% liquid
                                assign loop = 0
                                assign sizeValidator = 0

                                if states.size > countries.size
                                    assign loop = states.size
                                    assign sizeValidator = states
                                else
                                    assign loop = countries.size
                                    assign sizeValidator = countries
                                endif
                            %}

                            {% for i in (0..loop) %}
                                {% assign index = forloop.index0 %}
                                {% assign country_name = countries[i].country_name %}
                                {% assign country_link = countries[i].page.value.url %}
                                {% assign country_flag = countries[i].country_flag %}

                                {% unless sizeValidator[index] == blank %}
                                    <tr>
                                        <td>
                                            {% if states[index] != blank %}
                                                <a href="{{ states[index].page.value.url }}" class="link full-unstyled-link accent-link center">{{ states[index].country_name }}</a>
                                            {% endif %}
                                        </td>
                                        <td>
                                            {% unless countries[index] == blank or exclude contains country_name %}
                                                <div class="table-title w-icon">
                                                    {% unless countries[index].is_us_state == true %}
                                                        {% assign country_name = countries[index].country_name %}
                                                        {% assign country_link = countries[index].page.value.url %}
                                                        {% assign country_flag = countries[index].country_flag %}
                                                        
                                                        <div>
                                                            <div
                                                                class="media global-media-settings media--transparent media--adapt"
                                                                style="padding-bottom: 100%;"
                                                            >
                                                                {%- liquid
                                                                assign number_of_columns = 1
                                                                assign number_of_columns_mobile = 1
                                                                assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                                assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                                assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                                                                assign image_width = 1
                                                                -%}
                                                                {% capture sizes %}
                                                                (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                                                                (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                                                                (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                                                                calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                                                                {% endcapture %}
                                                                {{
                                                                country_flag
                                                                | image_url: width: 80
                                                                | image_tag:
                                                                    loading: 'lazy',
                                                                    widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                                                                    sizes: sizes
                                                                }}
                                                            </div>
                                                        </div>
                                                        <div>
                                                            <a href="{{ country_link }}" class="link full-unstyled-link accent-link">{{ country_name }}</a>
                                                        </div>
                                                    {% endunless %}
                                                </div>
                                            {% endunless %}
                                        </td>
                                    </tr>
                                {% endunless %}
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function cellSizer() {
        document.querySelectorAll('.table-cell').forEach(el=> {
            if (el.querySelector('.media') != null) {
                var computedStyle = getComputedStyle(el);
                cell_height = computedStyle.height;
                return false;
            }
        })
    
        document.querySelectorAll('.table-column details').forEach(e=> {
            const cells = e.querySelectorAll('.table-cell')
    
            cells.forEach(el=> {
                el.style.setProperty('--cell-height', cell_height);
            })
        })
    }
    cellSizer()
    window.onresize = cellSizer()
</script>

{% schema %}
    {
        "name": "Countries Table",
        "class": "countries-table",
        "enabled_on": {
            "templates": ["page"]
        },
        "settings": [
            {
                "type": "text",
                "id": "meta_name",
                "label": "Metaobject name",
                "info": "Metaobject type: https://prnt.sc/k5RKwo_v0vaW"
            },
            {
                "type": "text",
                "id": "exclude",
                "label": "Object name (ex. USA)",
                "info": "1 entry only"
            },
            {
                "type": "inline_richtext",
                "id": "title",
                "default": "Featured collection",
                "label": "t:sections.featured-collection.settings.title.label"
            },
            {
                "type": "select",
                "id": "heading_size",
                "options": [
                  {
                    "value": "h2",
                    "label": "t:sections.all.heading_size.options__1.label"
                  },
                  {
                    "value": "h1",
                    "label": "t:sections.all.heading_size.options__2.label"
                  },
                  {
                    "value": "h0",
                    "label": "t:sections.all.heading_size.options__3.label"
                  }
                ],
                "default": "h1",
                "label": "t:sections.all.heading_size.label"
            },
            {
                "type": "richtext",
                "id": "description",
                "label": "t:sections.featured-collection.settings.description.label"
            },
            {
                "type": "select",
                "id": "text_style",
                "options": [
                  {
                    "value": "body",
                    "label": "t:sections.email-signup-banner.blocks.paragraph.settings.text_style.options__1.label"
                  },
                  {
                    "value": "subtitle",
                    "label": "t:sections.email-signup-banner.blocks.paragraph.settings.text_style.options__2.label"
                  }
                ],
                "default": "body",
                "label": "t:sections.email-signup-banner.blocks.paragraph.settings.text_style.label"
            },
            {
                "type": "select",
                "id": "color_scheme",
                "options": [
                  {
                    "value": "accent-1",
                    "label": "t:sections.all.colors.accent_1.label"
                  },
                  {
                    "value": "accent-2",
                    "label": "t:sections.all.colors.accent_2.label"
                  },
                  {
                    "value": "background-1",
                    "label": "t:sections.all.colors.background_1.label"
                  },
                  {
                    "value": "background-2",
                    "label": "t:sections.all.colors.background_2.label"
                  },
                  {
                    "value": "inverse",
                    "label": "t:sections.all.colors.inverse.label"
                  }
                ],
                "default": "background-1",
                "label": "t:sections.all.colors.label",
                "info": "t:sections.all.colors.has_cards_info"
            },
            {
                "type": "header",
                "content": "t:sections.all.padding.section_padding_heading"
            },
            {
                "type": "range",
                "id": "padding_top",
                "min": 0,
                "max": 100,
                "step": 4,
                "unit": "px",
                "label": "t:sections.all.padding.padding_top",
                "default": 36
            },
            {
                "type": "range",
                "id": "padding_bottom",
                "min": 0,
                "max": 100,
                "step": 4,
                "unit": "px",
                "label": "t:sections.all.padding.padding_bottom",
                "default": 36
            }
        ],
        "blocks": [
            {
                "type": "column",
                "name": "Column",
                "limit": 2,
                "settings": [
                    {
                        "type": "inline_richtext",
                        "id": "title",
                        "default": "Featured collection",
                        "label": "t:sections.featured-collection.settings.title.label"
                    },
                    {
                        "type": "image_picker",
                        "id": "image",
                        "label": "Image Logo"
                    },
                    {
                        "type": "select",
                        "id": "states_only",
                        "options": [
                          {
                            "value": "true",
                            "label": "True"
                          },
                          {
                            "value": "false",
                            "label": "False"
                          }
                        ],
                        "default": "false",
                        "label": "Render States only"
                    }
                ]
            }
        ],
        "presets": [
            {
                "name": "Countries Table"
            }
        ]
    }
{% endschema %}