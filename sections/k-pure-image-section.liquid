{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: calc({{ section.settings.padding_top }}px * 0.75);
    padding-bottom: calc({{ section.settings.padding_bottom }}px  * 0.75);
  }

  .pure-link {
    display: block !important;
  }

  .pure-link:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="color-{{ section.settings.color_scheme }} {{ section.settings.css_class }} {% if section.settings.link != blank %}p-relative{% endif %} gradient">
    <div class="section-{{ section.id }}-padding">
        {% if section.settings.image %}
            <div
                class="media media--transparent media--adapt {% if section.settings.mobile_image %} small-hide{% endif %}"
                style="padding-bottom: {{ 1 | divided_by: section.settings.image.aspect_ratio | times: 100 }}%;"
            >
                {%- liquid
                assign number_of_columns = section.settings.columns_desktop
                assign number_of_columns_mobile = section.settings.columns_mobile
                assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                assign image_width = 1
                -%}
                {% capture sizes %}
                (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                {% endcapture %}
                {{
                section.settings.image
                | image_url: width: 3200
                | image_tag:
                    loading: 'lazy',
                    widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                    sizes: sizes
                }}
            </div>
        {% endif %}
        {% if section.settings.mobile_image %}
            <div
                class="media media--transparent media--adapt large-up-hide medium-hide"
                style="padding-bottom: {{ 1 | divided_by: section.settings.mobile_image.aspect_ratio | times: 100 }}%;"
            >
                {%- liquid
                assign number_of_columns = section.settings.columns_desktop
                assign number_of_columns_mobile = section.settings.columns_mobile
                assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                assign image_width = 1
                -%}
                {% capture sizes %}
                (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                {% endcapture %}
                {{
                section.settings.mobile_image
                | image_url: width: 900
                | image_tag:
                    loading: 'lazy',
                    widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                    sizes: sizes
                }}
            </div>
        {% endif %}

        {% if section.settings.link != blank %}
            <a href="{{ section.settings.link }}" class="pure-link"></a>
        {% endif %}
    </div>
</div>

{% schema %}
    {
        "name": "Pure Image",
        "settings": [
            {
                "type": "image_picker",
                "id": "image",
                "label": "Image"
            },
            {
                "type": "image_picker",
                "id": "mobile_image",
                "label": "Mobile Image"
            },
            {
                "type": "url",
                "id": "link",
                "label": "Link"
            },
            {
                "type": "select",
                "id": "color_scheme",
                "options": [
                  {
                    "value": "accent-1",
                    "label": "t:sections.all.colors.accent_1.label"
                  },
                  {
                    "value": "accent-2",
                    "label": "t:sections.all.colors.accent_2.label"
                  },
                  {
                    "value": "background-1",
                    "label": "t:sections.all.colors.background_1.label"
                  },
                  {
                    "value": "background-2",
                    "label": "t:sections.all.colors.background_2.label"
                  },
                  {
                    "value": "inverse",
                    "label": "t:sections.all.colors.inverse.label"
                  }
                ],
                "default": "background-1",
                "label": "t:sections.all.colors.label"
            },
            {
                "type": "header",
                "content": "t:sections.all.padding.section_padding_heading"
            },
            {
                "type": "range",
                "id": "padding_top",
                "min": 0,
                "max": 100,
                "step": 4,
                "unit": "px",
                "label": "t:sections.all.padding.padding_top",
                "default": 40
            },
            {
                "type": "range",
                "id": "padding_bottom",
                "min": 0,
                "max": 100,
                "step": 4,
                "unit": "px",
                "label": "t:sections.all.padding.padding_bottom",
                "default": 52
            },
            {
                "type": "text",
                "id": "css_class",
                "label": "CSS class"
            }
        ],
        "presets": [
            {
                "name": "Pure Image"
            }
        ]
    }
{% endschema %}