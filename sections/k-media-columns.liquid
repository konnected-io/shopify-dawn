{{ 'component-modal-video.css' | asset_url | stylesheet_tag }}
{{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: calc({{ section.settings.padding_top }}px * 0.75);
    padding-bottom: calc({{ section.settings.padding_bottom }}px  * 0.75);
  }
  #shopify-section-{{ section.id }} {
    --grid-desktop-horizontal-spacing: 40px;
    --media-radius: 12px;
  }
  .media-column-content h3 {
    margin: 1.5rem 0 0;
  }
  .media-column-content h3+ .rte {
    margin-top: 1.5rem;
  }
  
  #shopify-section-{{ section.id }} .deferred-media__poster-button {
    height: 5rem !important;
    width: 5rem !important;
  }
  #shopify-section-{{ section.id }} .deferred-media__poster-button .icon {
    width: 2rem !important;
    height: 2rem !important;
  }

  .card-bg-media {
    background: rgb(var(--color-background)) linear-gradient(rgba(var(--color-foreground), .04), rgba(var(--color-foreground), .04));
    padding: 2.5rem;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

{%- liquid
  assign highest_ratio = 0
  for block in section.blocks
    if block.settings.image.height > highest_ratio
      assign highest_ratio = block.settings.image.aspect_ratio
    endif
  endfor
-%}

<div class="color-{{ section.settings.color_scheme }} gradient {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}" data-cascade>
  <div class="section-{{ section.id }}-padding">
    <div class="page-width">
      {%- unless section.settings.title == blank -%}
        <div class="title-wrapper-with-link title-wrapper--self-padded-mobile title-wrapper--no-top-margin">
          <h2 class="title inline-richtext center {{ section.settings.heading_size }}">
            {{ section.settings.title }}
          </h2>
        </div>
      {%- endunless -%}
      <div class="grid grid--{{ section.settings.columns_mobile }}-col-tablet-down grid--{{ section.settings.columns_desktop }}-col-desktop">
          {% for block in section.blocks %}
              <div class="grid__item">
                <div class="media-column-content {% unless section.settings.background_style == 'none' %}card-bg-media{% endunless %} {% if section.settings.column_alignment == 'center' %} center{% endif %}">
                    {% if block.settings.image != blank %}
                      <div
                        class="media media--transparent media--adapt"
                        style="padding-bottom: {{ 1 | divided_by: highest_ratio | times: 100 }}%;"
                      >
                        {%- liquid
                          assign number_of_columns = section.settings.columns_desktop
                          assign number_of_columns_mobile = section.settings.columns_mobile
                          assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                          assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                          assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                          if section.settings.image_width == 'half'
                            assign image_width = 0.5
                          elsif section.settings.image_width == 'third'
                            assign image_width = 0.33
                          else
                            assign image_width = 1
                          endif
                        -%}
                        {% capture sizes %}
                          (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                          (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                          (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                          calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                        {% endcapture %}
                        {{
                          block.settings.image
                          | image_url: width: 3200
                          | image_tag:
                            loading: 'lazy',
                            widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                            sizes: sizes,
                            class: 'multicolumn-card__image'
                        }}
                      </div>
                    {% elsif block.settings.video != blank or block.settings.video_url != blank %}
                      <div class="media-video-card global-media-settings">
                        <noscript>
                          <a
                            href="{{ block.settings.video_url }}"
                            class="collage-card__link"
                          >
                            <div
                              class="media media--transparent ratio"
                              {% if block.settings.cover_image != blank %}
                                style="--ratio-percent: {{ 1 | divided_by: block.settings.cover_image.aspect_ratio | times: 100 }}%"
                              {% else %}
                                style="--ratio-percent: 100%"
                              {% endif %}
                            >
                              {%- if block.settings.cover_image != blank -%}
                                {%- capture sizes -%}
                                  (min-width: {{ settings.page_width }}px)
                                  {% if section.blocks.size == 1 -%}
                                    calc({{ settings.page_width }}px - 100px)
                                  {%- else -%}
                                    {{- settings.page_width | minus: 100 | times: 0.67 | round }}px
                                  {%- endif -%}
                                  , (min-width: 750px)
                                  {%- if section.blocks.size == 1 %} calc(100vw - 100px){% else %} 500px{% endif -%}
                                  , calc(100vw - 30px)
                                {%- endcapture -%}
                                {{
                                  block.settings.cover_image
                                  | image_url: width: 3000
                                  | image_tag: loading: 'lazy', sizes: sizes, widths: '550, 720, 990, 1100, 1500, 2200, 3000'
                                }}
                              {%- else -%}
                                {{ 'collection-2' | placeholder_svg_tag: 'placeholder-svg placeholder' }}
                              {%- endif -%}
                            </div>
                          </a>
                        </noscript>
                        <modal-opener class="no-js-hidden" data-modal="#PopupModal-{{ block.id }}">
                          <div class="deferred-media">
                            <button
                              class="deferred-media__poster full-unstyled-link"
                              type="button"
                              aria-label="{{ 'sections.video.load_video' | t: description: block.settings.description | escape }}"
                              aria-haspopup="dialog"
                              data-media-id="{{ block.settings.video_url.id }}"
                            >
                              <div
                                class="media media--transparent ratio"
                                {% if block.settings.cover_image != blank %}
                                  style="--ratio-percent: {{ 1 | divided_by: block.settings.cover_image.aspect_ratio | times: 100 }}%"
                                {% else %}
                                  style="--ratio-percent: 100%"
                                {% endif %}
                              >
                                <span class="deferred-media__poster-button motion-reduce">
                                  {%- render 'icon-play' -%}
                                </span>

                                {%- if block.settings.cover_image != blank -%}
                                  {%- capture sizes -%}
                                    (min-width: {{ settings.page_width }}px)
                                    {% if section.blocks.size == 1 -%}
                                      calc({{ settings.page_width }}px - 100px)
                                    {%- else -%}
                                      {{- settings.page_width | minus: 100 | times: 0.67 | round }}px
                                    {%- endif -%}
                                    , (min-width: 750px)
                                    {%- if section.blocks.size == 1 %} calc(100vw - 100px){% else %} 500px{% endif -%}
                                    , calc(100vw - 30px)
                                  {%- endcapture -%}
                                  {{
                                    block.settings.cover_image
                                    | image_url: width: 3000
                                    | image_tag: loading: 'lazy', sizes: sizes, widths: '550, 720, 990, 1100, 1500, 2200, 3000'
                                  }}
                                {%- else -%}
                                  {{ 'collection-2' | placeholder_svg_tag: 'placeholder-svg placeholder' }}
                                {%- endif -%}
                              </div>
                            </button>
                          </div>
                        </modal-opener>
                        <modal-dialog id="PopupModal-{{ block.id }}" class="modal-video media-modal color-background-1">
                          <div
                            class="modal-video__content"
                            role="dialog"
                            aria-label="{{ block.settings.description | escape }}"
                            aria-modal="true"
                            tabindex="-1"
                          >
                            <button
                              id="ModalClose-{{ block.id }}"
                              type="button"
                              class="modal-video__toggle"
                              aria-label="{{ 'accessibility.close' | t }}"
                            >
                              {% render 'icon-close' %}
                            </button>
                            <div class="modal-video__content-info">
                              <deferred-media class="modal-video__video template-popup">
                                <template>
                                  {%- if block.settings.video_url.type == 'youtube' -%}
                                    <iframe
                                      src="https://www.youtube.com/embed/{{ block.settings.video_url.id }}?enablejsapi=1"
                                      class="js-youtube"
                                      allow="autoplay; encrypted-media"
                                      allowfullscreen
                                      title="{{ block.settings.description | escape }}"
                                    ></iframe>
                                  {%- else -%}
                                    <iframe
                                      src="https://player.vimeo.com/video/{{ block.settings.video_url.id }}"
                                      class="js-vimeo"
                                      allow="autoplay; encrypted-media"
                                      allowfullscreen
                                      title="{{ block.settings.description | escape }}"
                                    ></iframe>
                                  {%- endif -%}
                                </template>
                              </deferred-media>
                            </div>
                          </div>
                        </modal-dialog>
                      </div>
                    {% endif %}
                  {%- if block.settings.title != blank -%}
                    <h3 class="inline-richtext">{{ block.settings.title }}</h3>
                  {%- endif -%}
                  {%- if block.settings.text != blank -%}
                    <div class="rte">{{ block.settings.text }}</div>
                  {%- endif -%}
                </div>
              </div>
          {% endfor %}
      </div>
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Media Columns",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "inline_richtext",
      "id": "title",
      "default": "Multicolumn",
      "label": "t:sections.multicolumn.settings.title.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "select",
      "id": "column_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.multicolumn.settings.column_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.multicolumn.settings.column_alignment.options__2.label"
        }
      ],
      "default": "left",
      "label": "t:sections.multicolumn.settings.column_alignment.label"
    },
    {
      "type": "select",
      "id": "background_style",
      "options": [
        {
          "value": "none",
          "label": "t:sections.multicolumn.settings.background_style.options__1.label"
        },
        {
          "value": "primary",
          "label": "t:sections.multicolumn.settings.background_style.options__2.label"
        }
      ],
      "default": "primary",
      "label": "t:sections.multicolumn.settings.background_style.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 3,
      "label": "t:sections.multicolumn.settings.columns_desktop.label"
    },
        {
      "type": "header",
      "content": "t:sections.multicolumn.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "options": [
        {
          "value": "1",
          "label": "t:sections.multicolumn.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.multicolumn.settings.columns_mobile.options__2.label"
        }
      ],
      "default": "1",
      "label": "t:sections.multicolumn.settings.columns_mobile.label"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        {
          "value": "accent-1",
          "label": "t:sections.all.colors.accent_1.label"
        },
        {
          "value": "accent-2",
          "label": "t:sections.all.colors.accent_2.label"
        },
        {
          "value": "background-1",
          "label": "t:sections.all.colors.background_1.label"
        },
        {
          "value": "background-2",
          "label": "t:sections.all.colors.background_2.label"
        },
        {
          "value": "inverse",
          "label": "t:sections.all.colors.inverse.label"
        }
      ],
      "default": "background-1",
      "label": "t:sections.all.colors.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 52
    }
  ],
  "blocks": [
    {
        "type": "item",
        "name": "Item",
        "settings": [
            {
              "type": "image_picker",
              "id": "image",
              "label": "Image",
              "visible_if": "{{ block.settings.video == blank }}"
            },
            {
              "type": "video",
              "id": "video",
              "label": "Video",
              "visible_if": "{{ block.settings.image == blank }}"
            },
            {
              "type": "video_url",
              "id": "video_url",
              "accept": ["youtube", "vimeo"],
              "default": "https://www.youtube.com/watch?v=_9VUPq3SxOc",
              "label": "t:sections.collage.blocks.video.settings.video_url.label",
              "placeholder": "t:sections.collage.blocks.video.settings.video_url.placeholder",
              "info": "t:sections.collage.blocks.video.settings.video_url.info",
              "visible_if": "{{ block.settings.video == blank }}"
            },
            {
              "type": "image_picker",
              "id": "cover_image",
              "label": "t:sections.collage.blocks.video.settings.cover_image.label",
              "visible_if": "{{ block.settings.video != blank or block.settings.video_url != blank }}"
            },
            {
                "type": "inline_richtext",
                "id": "title",
                "default": "Column",
                "label": "t:sections.multicolumn.blocks.column.settings.title.label"
            },
            {
                "type": "richtext",
                "id": "text",
                "default": "<p>Pair text with an image to focus on your chosen product, collection, or blog post. Add details on availability, style, or even provide a review.</p>",
                "label": "t:sections.multicolumn.blocks.column.settings.text.label"
            }
        ]
    }
  ],
  "presets": [
    {
      "name": "Media Columns"
    }
  ]
}
{% endschema %}